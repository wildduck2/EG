/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as HomeHomeImport } from './routes/home/_home'
import { Route as AuthAuthImport } from './routes/auth/_auth'
import { Route as HomeHomeIndexImport } from './routes/home/_home.index'
import { Route as AccountAccountIndexImport } from './routes/account/_account.index'
import { Route as HomeCategoriesCategoriesImport } from './routes/home/categories/_categories'
import { Route as HomeCategoriesCategoriesIndexImport } from './routes/home/categories/_categories.index'

// Create Virtual Routes

const HomeImport = createFileRoute('/home')()
const AuthImport = createFileRoute('/auth')()
const HomeCategoriesImport = createFileRoute('/home/categories')()
const AuthAuthSignupLazyImport = createFileRoute('/auth/_auth/signup')()
const AuthAuthSigninLazyImport = createFileRoute('/auth/_auth/signin')()
const AuthAuthForgetPasswordLazyImport = createFileRoute(
  '/auth/_auth/forget-password',
)()
const HomeCategoriesCategoriesIdLazyImport = createFileRoute(
  '/home/categories/_categories/$id',
)()

// Create/Update Routes

const HomeRoute = HomeImport.update({
  path: '/home',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  path: '/auth',
  getParentRoute: () => rootRoute,
} as any)

const HomeCategoriesRoute = HomeCategoriesImport.update({
  path: '/categories',
  getParentRoute: () => HomeRoute,
} as any)

const HomeHomeRoute = HomeHomeImport.update({
  id: '/_home',
  getParentRoute: () => HomeRoute,
} as any)

const AuthAuthRoute = AuthAuthImport.update({
  id: '/_auth',
  getParentRoute: () => AuthRoute,
} as any)

const HomeHomeIndexRoute = HomeHomeIndexImport.update({
  path: '/',
  getParentRoute: () => HomeHomeRoute,
} as any)

const AccountAccountIndexRoute = AccountAccountIndexImport.update({
  path: '/account/',
  getParentRoute: () => rootRoute,
} as any)

const AuthAuthSignupLazyRoute = AuthAuthSignupLazyImport.update({
  path: '/signup',
  getParentRoute: () => AuthAuthRoute,
} as any).lazy(() =>
  import('./routes/auth/_auth.signup.lazy').then((d) => d.Route),
)

const AuthAuthSigninLazyRoute = AuthAuthSigninLazyImport.update({
  path: '/signin',
  getParentRoute: () => AuthAuthRoute,
} as any).lazy(() =>
  import('./routes/auth/_auth.signin.lazy').then((d) => d.Route),
)

const AuthAuthForgetPasswordLazyRoute = AuthAuthForgetPasswordLazyImport.update(
  {
    path: '/forget-password',
    getParentRoute: () => AuthAuthRoute,
  } as any,
).lazy(() =>
  import('./routes/auth/_auth.forget-password.lazy').then((d) => d.Route),
)

const HomeCategoriesCategoriesRoute = HomeCategoriesCategoriesImport.update({
  id: '/_categories',
  getParentRoute: () => HomeCategoriesRoute,
} as any)

const HomeCategoriesCategoriesIndexRoute =
  HomeCategoriesCategoriesIndexImport.update({
    path: '/',
    getParentRoute: () => HomeCategoriesCategoriesRoute,
  } as any)

const HomeCategoriesCategoriesIdLazyRoute =
  HomeCategoriesCategoriesIdLazyImport.update({
    path: '/$id',
    getParentRoute: () => HomeCategoriesCategoriesRoute,
  } as any).lazy(() =>
    import('./routes/home/categories/_categories.$id.lazy').then(
      (d) => d.Route,
    ),
  )

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/auth/_auth': {
      id: '/auth/_auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthAuthImport
      parentRoute: typeof AuthRoute
    }
    '/home': {
      id: '/home'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof HomeImport
      parentRoute: typeof rootRoute
    }
    '/home/_home': {
      id: '/home/_home'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof HomeHomeImport
      parentRoute: typeof HomeRoute
    }
    '/home/categories': {
      id: '/home/categories'
      path: '/categories'
      fullPath: '/home/categories'
      preLoaderRoute: typeof HomeCategoriesImport
      parentRoute: typeof HomeImport
    }
    '/home/categories/_categories': {
      id: '/home/categories/_categories'
      path: '/categories'
      fullPath: '/home/categories'
      preLoaderRoute: typeof HomeCategoriesCategoriesImport
      parentRoute: typeof HomeCategoriesRoute
    }
    '/auth/_auth/forget-password': {
      id: '/auth/_auth/forget-password'
      path: '/forget-password'
      fullPath: '/auth/forget-password'
      preLoaderRoute: typeof AuthAuthForgetPasswordLazyImport
      parentRoute: typeof AuthAuthImport
    }
    '/auth/_auth/signin': {
      id: '/auth/_auth/signin'
      path: '/signin'
      fullPath: '/auth/signin'
      preLoaderRoute: typeof AuthAuthSigninLazyImport
      parentRoute: typeof AuthAuthImport
    }
    '/auth/_auth/signup': {
      id: '/auth/_auth/signup'
      path: '/signup'
      fullPath: '/auth/signup'
      preLoaderRoute: typeof AuthAuthSignupLazyImport
      parentRoute: typeof AuthAuthImport
    }
    '/account/_account/': {
      id: '/account/_account/'
      path: '/account'
      fullPath: '/account'
      preLoaderRoute: typeof AccountAccountIndexImport
      parentRoute: typeof rootRoute
    }
    '/home/_home/': {
      id: '/home/_home/'
      path: '/'
      fullPath: '/home/'
      preLoaderRoute: typeof HomeHomeIndexImport
      parentRoute: typeof HomeHomeImport
    }
    '/home/categories/_categories/$id': {
      id: '/home/categories/_categories/$id'
      path: '/$id'
      fullPath: '/home/categories/$id'
      preLoaderRoute: typeof HomeCategoriesCategoriesIdLazyImport
      parentRoute: typeof HomeCategoriesCategoriesImport
    }
    '/home/categories/_categories/': {
      id: '/home/categories/_categories/'
      path: '/'
      fullPath: '/home/categories/'
      preLoaderRoute: typeof HomeCategoriesCategoriesIndexImport
      parentRoute: typeof HomeCategoriesCategoriesImport
    }
  }
}

// Create and export the route tree

interface AuthAuthRouteChildren {
  AuthAuthForgetPasswordLazyRoute: typeof AuthAuthForgetPasswordLazyRoute
  AuthAuthSigninLazyRoute: typeof AuthAuthSigninLazyRoute
  AuthAuthSignupLazyRoute: typeof AuthAuthSignupLazyRoute
}

const AuthAuthRouteChildren: AuthAuthRouteChildren = {
  AuthAuthForgetPasswordLazyRoute: AuthAuthForgetPasswordLazyRoute,
  AuthAuthSigninLazyRoute: AuthAuthSigninLazyRoute,
  AuthAuthSignupLazyRoute: AuthAuthSignupLazyRoute,
}

const AuthAuthRouteWithChildren = AuthAuthRoute._addFileChildren(
  AuthAuthRouteChildren,
)

interface AuthRouteChildren {
  AuthAuthRoute: typeof AuthAuthRouteWithChildren
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthAuthRoute: AuthAuthRouteWithChildren,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

interface HomeHomeRouteChildren {
  HomeHomeIndexRoute: typeof HomeHomeIndexRoute
}

const HomeHomeRouteChildren: HomeHomeRouteChildren = {
  HomeHomeIndexRoute: HomeHomeIndexRoute,
}

const HomeHomeRouteWithChildren = HomeHomeRoute._addFileChildren(
  HomeHomeRouteChildren,
)

interface HomeCategoriesCategoriesRouteChildren {
  HomeCategoriesCategoriesIdLazyRoute: typeof HomeCategoriesCategoriesIdLazyRoute
  HomeCategoriesCategoriesIndexRoute: typeof HomeCategoriesCategoriesIndexRoute
}

const HomeCategoriesCategoriesRouteChildren: HomeCategoriesCategoriesRouteChildren =
  {
    HomeCategoriesCategoriesIdLazyRoute: HomeCategoriesCategoriesIdLazyRoute,
    HomeCategoriesCategoriesIndexRoute: HomeCategoriesCategoriesIndexRoute,
  }

const HomeCategoriesCategoriesRouteWithChildren =
  HomeCategoriesCategoriesRoute._addFileChildren(
    HomeCategoriesCategoriesRouteChildren,
  )

interface HomeCategoriesRouteChildren {
  HomeCategoriesCategoriesRoute: typeof HomeCategoriesCategoriesRouteWithChildren
}

const HomeCategoriesRouteChildren: HomeCategoriesRouteChildren = {
  HomeCategoriesCategoriesRoute: HomeCategoriesCategoriesRouteWithChildren,
}

const HomeCategoriesRouteWithChildren = HomeCategoriesRoute._addFileChildren(
  HomeCategoriesRouteChildren,
)

interface HomeRouteChildren {
  HomeHomeRoute: typeof HomeHomeRouteWithChildren
  HomeCategoriesRoute: typeof HomeCategoriesRouteWithChildren
}

const HomeRouteChildren: HomeRouteChildren = {
  HomeHomeRoute: HomeHomeRouteWithChildren,
  HomeCategoriesRoute: HomeCategoriesRouteWithChildren,
}

const HomeRouteWithChildren = HomeRoute._addFileChildren(HomeRouteChildren)

export interface FileRoutesByFullPath {
  '/auth': typeof AuthAuthRouteWithChildren
  '/home': typeof HomeHomeRouteWithChildren
  '/home/categories': typeof HomeCategoriesCategoriesRouteWithChildren
  '/auth/forget-password': typeof AuthAuthForgetPasswordLazyRoute
  '/auth/signin': typeof AuthAuthSigninLazyRoute
  '/auth/signup': typeof AuthAuthSignupLazyRoute
  '/account': typeof AccountAccountIndexRoute
  '/home/': typeof HomeHomeIndexRoute
  '/home/categories/$id': typeof HomeCategoriesCategoriesIdLazyRoute
  '/home/categories/': typeof HomeCategoriesCategoriesIndexRoute
}

export interface FileRoutesByTo {
  '/auth': typeof AuthAuthRouteWithChildren
  '/home': typeof HomeHomeIndexRoute
  '/home/categories': typeof HomeCategoriesCategoriesIndexRoute
  '/auth/forget-password': typeof AuthAuthForgetPasswordLazyRoute
  '/auth/signin': typeof AuthAuthSigninLazyRoute
  '/auth/signup': typeof AuthAuthSignupLazyRoute
  '/account': typeof AccountAccountIndexRoute
  '/home/categories/$id': typeof HomeCategoriesCategoriesIdLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/auth': typeof AuthRouteWithChildren
  '/auth/_auth': typeof AuthAuthRouteWithChildren
  '/home': typeof HomeRouteWithChildren
  '/home/_home': typeof HomeHomeRouteWithChildren
  '/home/categories': typeof HomeCategoriesRouteWithChildren
  '/home/categories/_categories': typeof HomeCategoriesCategoriesRouteWithChildren
  '/auth/_auth/forget-password': typeof AuthAuthForgetPasswordLazyRoute
  '/auth/_auth/signin': typeof AuthAuthSigninLazyRoute
  '/auth/_auth/signup': typeof AuthAuthSignupLazyRoute
  '/account/_account/': typeof AccountAccountIndexRoute
  '/home/_home/': typeof HomeHomeIndexRoute
  '/home/categories/_categories/$id': typeof HomeCategoriesCategoriesIdLazyRoute
  '/home/categories/_categories/': typeof HomeCategoriesCategoriesIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/auth'
    | '/home'
    | '/home/categories'
    | '/auth/forget-password'
    | '/auth/signin'
    | '/auth/signup'
    | '/account'
    | '/home/'
    | '/home/categories/$id'
    | '/home/categories/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/auth'
    | '/home'
    | '/home/categories'
    | '/auth/forget-password'
    | '/auth/signin'
    | '/auth/signup'
    | '/account'
    | '/home/categories/$id'
  id:
    | '__root__'
    | '/auth'
    | '/auth/_auth'
    | '/home'
    | '/home/_home'
    | '/home/categories'
    | '/home/categories/_categories'
    | '/auth/_auth/forget-password'
    | '/auth/_auth/signin'
    | '/auth/_auth/signup'
    | '/account/_account/'
    | '/home/_home/'
    | '/home/categories/_categories/$id'
    | '/home/categories/_categories/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AuthRoute: typeof AuthRouteWithChildren
  HomeRoute: typeof HomeRouteWithChildren
  AccountAccountIndexRoute: typeof AccountAccountIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  AuthRoute: AuthRouteWithChildren,
  HomeRoute: HomeRouteWithChildren,
  AccountAccountIndexRoute: AccountAccountIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/auth",
        "/home",
        "/account/_account/"
      ]
    },
    "/auth": {
      "filePath": "auth",
      "children": [
        "/auth/_auth"
      ]
    },
    "/auth/_auth": {
      "filePath": "auth/_auth.tsx",
      "parent": "/auth",
      "children": [
        "/auth/_auth/forget-password",
        "/auth/_auth/signin",
        "/auth/_auth/signup"
      ]
    },
    "/home": {
      "filePath": "home",
      "children": [
        "/home/_home",
        "/home/categories"
      ]
    },
    "/home/_home": {
      "filePath": "home/_home.tsx",
      "parent": "/home",
      "children": [
        "/home/_home/"
      ]
    },
    "/home/categories": {
      "filePath": "home/categories",
      "parent": "/home",
      "children": [
        "/home/categories/_categories"
      ]
    },
    "/home/categories/_categories": {
      "filePath": "home/categories/_categories.tsx",
      "parent": "/home/categories",
      "children": [
        "/home/categories/_categories/$id",
        "/home/categories/_categories/"
      ]
    },
    "/auth/_auth/forget-password": {
      "filePath": "auth/_auth.forget-password.lazy.tsx",
      "parent": "/auth/_auth"
    },
    "/auth/_auth/signin": {
      "filePath": "auth/_auth.signin.lazy.tsx",
      "parent": "/auth/_auth"
    },
    "/auth/_auth/signup": {
      "filePath": "auth/_auth.signup.lazy.tsx",
      "parent": "/auth/_auth"
    },
    "/account/_account/": {
      "filePath": "account/_account.index.tsx"
    },
    "/home/_home/": {
      "filePath": "home/_home.index.tsx",
      "parent": "/home/_home"
    },
    "/home/categories/_categories/$id": {
      "filePath": "home/categories/_categories.$id.lazy.tsx",
      "parent": "/home/categories/_categories"
    },
    "/home/categories/_categories/": {
      "filePath": "home/categories/_categories.index.tsx",
      "parent": "/home/categories/_categories"
    }
  }
}
ROUTE_MANIFEST_END */
