/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as CategoriesCategoriesImport } from './routes/categories/_categories'
import { Route as AuthAuthImport } from './routes/auth/_auth'
import { Route as AccountAccountImport } from './routes/account/_account'
import { Route as CategoriesCategoriesIndexImport } from './routes/categories/_categories.index'
import { Route as AccountAccountIndexImport } from './routes/account/_account.index'
import { Route as CategoriesProductProductImport } from './routes/categories/product/_product'
import { Route as AuthAuthVerificationConfirmedImport } from './routes/auth/_auth.verification-confirmed'
import { Route as AuthAuthVerificationImport } from './routes/auth/_auth.verification'
import { Route as AuthAuthSigninImport } from './routes/auth/_auth.signin'
import { Route as AuthAuthForgetPasswordImport } from './routes/auth/_auth.forget-password'
import { Route as AuthAuthChangePasswordImport } from './routes/auth/_auth.change-password'
import { Route as CategoriesCategoriesSearchIdImport } from './routes/categories/_categories.search.$id'

// Create Virtual Routes

const CategoriesImport = createFileRoute('/categories')()
const AuthImport = createFileRoute('/auth')()
const AccountImport = createFileRoute('/account')()
const CategoriesProductImport = createFileRoute('/categories/product')()
const CategoriesCategoriesIdLazyImport = createFileRoute(
  '/categories/_categories/$id',
)()
const AuthAuthSignupLazyImport = createFileRoute('/auth/_auth/signup')()
const CategoriesProductProductIdLazyImport = createFileRoute(
  '/categories/product/_product/$id',
)()
const AccountAccountTraderIdLazyImport = createFileRoute(
  '/account/_account/trader/$id',
)()

// Create/Update Routes

const CategoriesRoute = CategoriesImport.update({
  path: '/categories',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  path: '/auth',
  getParentRoute: () => rootRoute,
} as any)

const AccountRoute = AccountImport.update({
  path: '/account',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const CategoriesProductRoute = CategoriesProductImport.update({
  path: '/product',
  getParentRoute: () => CategoriesRoute,
} as any)

const CategoriesCategoriesRoute = CategoriesCategoriesImport.update({
  id: '/_categories',
  getParentRoute: () => CategoriesRoute,
} as any)

const AuthAuthRoute = AuthAuthImport.update({
  id: '/_auth',
  getParentRoute: () => AuthRoute,
} as any)

const AccountAccountRoute = AccountAccountImport.update({
  id: '/_account',
  getParentRoute: () => AccountRoute,
} as any)

const CategoriesCategoriesIndexRoute = CategoriesCategoriesIndexImport.update({
  path: '/',
  getParentRoute: () => CategoriesCategoriesRoute,
} as any)

const AccountAccountIndexRoute = AccountAccountIndexImport.update({
  path: '/',
  getParentRoute: () => AccountAccountRoute,
} as any)

const CategoriesCategoriesIdLazyRoute = CategoriesCategoriesIdLazyImport.update(
  {
    path: '/$id',
    getParentRoute: () => CategoriesCategoriesRoute,
  } as any,
).lazy(() =>
  import('./routes/categories/_categories.$id.lazy').then((d) => d.Route),
)

const AuthAuthSignupLazyRoute = AuthAuthSignupLazyImport.update({
  path: '/signup',
  getParentRoute: () => AuthAuthRoute,
} as any).lazy(() =>
  import('./routes/auth/_auth.signup.lazy').then((d) => d.Route),
)

const CategoriesProductProductRoute = CategoriesProductProductImport.update({
  id: '/_product',
  getParentRoute: () => CategoriesProductRoute,
} as any)

const AuthAuthVerificationConfirmedRoute =
  AuthAuthVerificationConfirmedImport.update({
    path: '/verification-confirmed',
    getParentRoute: () => AuthAuthRoute,
  } as any)

const AuthAuthVerificationRoute = AuthAuthVerificationImport.update({
  path: '/verification',
  getParentRoute: () => AuthAuthRoute,
} as any)

const AuthAuthSigninRoute = AuthAuthSigninImport.update({
  path: '/signin',
  getParentRoute: () => AuthAuthRoute,
} as any)

const AuthAuthForgetPasswordRoute = AuthAuthForgetPasswordImport.update({
  path: '/forget-password',
  getParentRoute: () => AuthAuthRoute,
} as any)

const AuthAuthChangePasswordRoute = AuthAuthChangePasswordImport.update({
  path: '/change-password',
  getParentRoute: () => AuthAuthRoute,
} as any)

const CategoriesProductProductIdLazyRoute =
  CategoriesProductProductIdLazyImport.update({
    path: '/$id',
    getParentRoute: () => CategoriesProductProductRoute,
  } as any).lazy(() =>
    import('./routes/categories/product/_product.$id.lazy').then(
      (d) => d.Route,
    ),
  )

const AccountAccountTraderIdLazyRoute = AccountAccountTraderIdLazyImport.update(
  {
    path: '/trader/$id',
    getParentRoute: () => AccountAccountRoute,
  } as any,
).lazy(() =>
  import('./routes/account/_account.trader.$id.lazy').then((d) => d.Route),
)

const CategoriesCategoriesSearchIdRoute =
  CategoriesCategoriesSearchIdImport.update({
    path: '/search/$id',
    getParentRoute: () => CategoriesCategoriesRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/account': {
      id: '/account'
      path: '/account'
      fullPath: '/account'
      preLoaderRoute: typeof AccountImport
      parentRoute: typeof rootRoute
    }
    '/account/_account': {
      id: '/account/_account'
      path: '/account'
      fullPath: '/account'
      preLoaderRoute: typeof AccountAccountImport
      parentRoute: typeof AccountRoute
    }
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/auth/_auth': {
      id: '/auth/_auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthAuthImport
      parentRoute: typeof AuthRoute
    }
    '/categories': {
      id: '/categories'
      path: '/categories'
      fullPath: '/categories'
      preLoaderRoute: typeof CategoriesImport
      parentRoute: typeof rootRoute
    }
    '/categories/_categories': {
      id: '/categories/_categories'
      path: '/categories'
      fullPath: '/categories'
      preLoaderRoute: typeof CategoriesCategoriesImport
      parentRoute: typeof CategoriesRoute
    }
    '/auth/_auth/change-password': {
      id: '/auth/_auth/change-password'
      path: '/change-password'
      fullPath: '/auth/change-password'
      preLoaderRoute: typeof AuthAuthChangePasswordImport
      parentRoute: typeof AuthAuthImport
    }
    '/auth/_auth/forget-password': {
      id: '/auth/_auth/forget-password'
      path: '/forget-password'
      fullPath: '/auth/forget-password'
      preLoaderRoute: typeof AuthAuthForgetPasswordImport
      parentRoute: typeof AuthAuthImport
    }
    '/auth/_auth/signin': {
      id: '/auth/_auth/signin'
      path: '/signin'
      fullPath: '/auth/signin'
      preLoaderRoute: typeof AuthAuthSigninImport
      parentRoute: typeof AuthAuthImport
    }
    '/auth/_auth/verification': {
      id: '/auth/_auth/verification'
      path: '/verification'
      fullPath: '/auth/verification'
      preLoaderRoute: typeof AuthAuthVerificationImport
      parentRoute: typeof AuthAuthImport
    }
    '/auth/_auth/verification-confirmed': {
      id: '/auth/_auth/verification-confirmed'
      path: '/verification-confirmed'
      fullPath: '/auth/verification-confirmed'
      preLoaderRoute: typeof AuthAuthVerificationConfirmedImport
      parentRoute: typeof AuthAuthImport
    }
    '/categories/product': {
      id: '/categories/product'
      path: '/product'
      fullPath: '/categories/product'
      preLoaderRoute: typeof CategoriesProductImport
      parentRoute: typeof CategoriesImport
    }
    '/categories/product/_product': {
      id: '/categories/product/_product'
      path: '/product'
      fullPath: '/categories/product'
      preLoaderRoute: typeof CategoriesProductProductImport
      parentRoute: typeof CategoriesProductRoute
    }
    '/auth/_auth/signup': {
      id: '/auth/_auth/signup'
      path: '/signup'
      fullPath: '/auth/signup'
      preLoaderRoute: typeof AuthAuthSignupLazyImport
      parentRoute: typeof AuthAuthImport
    }
    '/categories/_categories/$id': {
      id: '/categories/_categories/$id'
      path: '/$id'
      fullPath: '/categories/$id'
      preLoaderRoute: typeof CategoriesCategoriesIdLazyImport
      parentRoute: typeof CategoriesCategoriesImport
    }
    '/account/_account/': {
      id: '/account/_account/'
      path: '/'
      fullPath: '/account/'
      preLoaderRoute: typeof AccountAccountIndexImport
      parentRoute: typeof AccountAccountImport
    }
    '/categories/_categories/': {
      id: '/categories/_categories/'
      path: '/'
      fullPath: '/categories/'
      preLoaderRoute: typeof CategoriesCategoriesIndexImport
      parentRoute: typeof CategoriesCategoriesImport
    }
    '/categories/_categories/search/$id': {
      id: '/categories/_categories/search/$id'
      path: '/search/$id'
      fullPath: '/categories/search/$id'
      preLoaderRoute: typeof CategoriesCategoriesSearchIdImport
      parentRoute: typeof CategoriesCategoriesImport
    }
    '/account/_account/trader/$id': {
      id: '/account/_account/trader/$id'
      path: '/trader/$id'
      fullPath: '/account/trader/$id'
      preLoaderRoute: typeof AccountAccountTraderIdLazyImport
      parentRoute: typeof AccountAccountImport
    }
    '/categories/product/_product/$id': {
      id: '/categories/product/_product/$id'
      path: '/$id'
      fullPath: '/categories/product/$id'
      preLoaderRoute: typeof CategoriesProductProductIdLazyImport
      parentRoute: typeof CategoriesProductProductImport
    }
  }
}

// Create and export the route tree

interface AccountAccountRouteChildren {
  AccountAccountIndexRoute: typeof AccountAccountIndexRoute
  AccountAccountTraderIdLazyRoute: typeof AccountAccountTraderIdLazyRoute
}

const AccountAccountRouteChildren: AccountAccountRouteChildren = {
  AccountAccountIndexRoute: AccountAccountIndexRoute,
  AccountAccountTraderIdLazyRoute: AccountAccountTraderIdLazyRoute,
}

const AccountAccountRouteWithChildren = AccountAccountRoute._addFileChildren(
  AccountAccountRouteChildren,
)

interface AccountRouteChildren {
  AccountAccountRoute: typeof AccountAccountRouteWithChildren
}

const AccountRouteChildren: AccountRouteChildren = {
  AccountAccountRoute: AccountAccountRouteWithChildren,
}

const AccountRouteWithChildren =
  AccountRoute._addFileChildren(AccountRouteChildren)

interface AuthAuthRouteChildren {
  AuthAuthChangePasswordRoute: typeof AuthAuthChangePasswordRoute
  AuthAuthForgetPasswordRoute: typeof AuthAuthForgetPasswordRoute
  AuthAuthSigninRoute: typeof AuthAuthSigninRoute
  AuthAuthVerificationRoute: typeof AuthAuthVerificationRoute
  AuthAuthVerificationConfirmedRoute: typeof AuthAuthVerificationConfirmedRoute
  AuthAuthSignupLazyRoute: typeof AuthAuthSignupLazyRoute
}

const AuthAuthRouteChildren: AuthAuthRouteChildren = {
  AuthAuthChangePasswordRoute: AuthAuthChangePasswordRoute,
  AuthAuthForgetPasswordRoute: AuthAuthForgetPasswordRoute,
  AuthAuthSigninRoute: AuthAuthSigninRoute,
  AuthAuthVerificationRoute: AuthAuthVerificationRoute,
  AuthAuthVerificationConfirmedRoute: AuthAuthVerificationConfirmedRoute,
  AuthAuthSignupLazyRoute: AuthAuthSignupLazyRoute,
}

const AuthAuthRouteWithChildren = AuthAuthRoute._addFileChildren(
  AuthAuthRouteChildren,
)

interface AuthRouteChildren {
  AuthAuthRoute: typeof AuthAuthRouteWithChildren
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthAuthRoute: AuthAuthRouteWithChildren,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

interface CategoriesCategoriesRouteChildren {
  CategoriesCategoriesIdLazyRoute: typeof CategoriesCategoriesIdLazyRoute
  CategoriesCategoriesIndexRoute: typeof CategoriesCategoriesIndexRoute
  CategoriesCategoriesSearchIdRoute: typeof CategoriesCategoriesSearchIdRoute
}

const CategoriesCategoriesRouteChildren: CategoriesCategoriesRouteChildren = {
  CategoriesCategoriesIdLazyRoute: CategoriesCategoriesIdLazyRoute,
  CategoriesCategoriesIndexRoute: CategoriesCategoriesIndexRoute,
  CategoriesCategoriesSearchIdRoute: CategoriesCategoriesSearchIdRoute,
}

const CategoriesCategoriesRouteWithChildren =
  CategoriesCategoriesRoute._addFileChildren(CategoriesCategoriesRouteChildren)

interface CategoriesProductProductRouteChildren {
  CategoriesProductProductIdLazyRoute: typeof CategoriesProductProductIdLazyRoute
}

const CategoriesProductProductRouteChildren: CategoriesProductProductRouteChildren =
  {
    CategoriesProductProductIdLazyRoute: CategoriesProductProductIdLazyRoute,
  }

const CategoriesProductProductRouteWithChildren =
  CategoriesProductProductRoute._addFileChildren(
    CategoriesProductProductRouteChildren,
  )

interface CategoriesProductRouteChildren {
  CategoriesProductProductRoute: typeof CategoriesProductProductRouteWithChildren
}

const CategoriesProductRouteChildren: CategoriesProductRouteChildren = {
  CategoriesProductProductRoute: CategoriesProductProductRouteWithChildren,
}

const CategoriesProductRouteWithChildren =
  CategoriesProductRoute._addFileChildren(CategoriesProductRouteChildren)

interface CategoriesRouteChildren {
  CategoriesCategoriesRoute: typeof CategoriesCategoriesRouteWithChildren
  CategoriesProductRoute: typeof CategoriesProductRouteWithChildren
}

const CategoriesRouteChildren: CategoriesRouteChildren = {
  CategoriesCategoriesRoute: CategoriesCategoriesRouteWithChildren,
  CategoriesProductRoute: CategoriesProductRouteWithChildren,
}

const CategoriesRouteWithChildren = CategoriesRoute._addFileChildren(
  CategoriesRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/account': typeof AccountAccountRouteWithChildren
  '/auth': typeof AuthAuthRouteWithChildren
  '/categories': typeof CategoriesCategoriesRouteWithChildren
  '/auth/change-password': typeof AuthAuthChangePasswordRoute
  '/auth/forget-password': typeof AuthAuthForgetPasswordRoute
  '/auth/signin': typeof AuthAuthSigninRoute
  '/auth/verification': typeof AuthAuthVerificationRoute
  '/auth/verification-confirmed': typeof AuthAuthVerificationConfirmedRoute
  '/categories/product': typeof CategoriesProductProductRouteWithChildren
  '/auth/signup': typeof AuthAuthSignupLazyRoute
  '/categories/$id': typeof CategoriesCategoriesIdLazyRoute
  '/account/': typeof AccountAccountIndexRoute
  '/categories/': typeof CategoriesCategoriesIndexRoute
  '/categories/search/$id': typeof CategoriesCategoriesSearchIdRoute
  '/account/trader/$id': typeof AccountAccountTraderIdLazyRoute
  '/categories/product/$id': typeof CategoriesProductProductIdLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/account': typeof AccountAccountIndexRoute
  '/auth': typeof AuthAuthRouteWithChildren
  '/categories': typeof CategoriesCategoriesIndexRoute
  '/auth/change-password': typeof AuthAuthChangePasswordRoute
  '/auth/forget-password': typeof AuthAuthForgetPasswordRoute
  '/auth/signin': typeof AuthAuthSigninRoute
  '/auth/verification': typeof AuthAuthVerificationRoute
  '/auth/verification-confirmed': typeof AuthAuthVerificationConfirmedRoute
  '/categories/product': typeof CategoriesProductProductRouteWithChildren
  '/auth/signup': typeof AuthAuthSignupLazyRoute
  '/categories/$id': typeof CategoriesCategoriesIdLazyRoute
  '/categories/search/$id': typeof CategoriesCategoriesSearchIdRoute
  '/account/trader/$id': typeof AccountAccountTraderIdLazyRoute
  '/categories/product/$id': typeof CategoriesProductProductIdLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/account': typeof AccountRouteWithChildren
  '/account/_account': typeof AccountAccountRouteWithChildren
  '/auth': typeof AuthRouteWithChildren
  '/auth/_auth': typeof AuthAuthRouteWithChildren
  '/categories': typeof CategoriesRouteWithChildren
  '/categories/_categories': typeof CategoriesCategoriesRouteWithChildren
  '/auth/_auth/change-password': typeof AuthAuthChangePasswordRoute
  '/auth/_auth/forget-password': typeof AuthAuthForgetPasswordRoute
  '/auth/_auth/signin': typeof AuthAuthSigninRoute
  '/auth/_auth/verification': typeof AuthAuthVerificationRoute
  '/auth/_auth/verification-confirmed': typeof AuthAuthVerificationConfirmedRoute
  '/categories/product': typeof CategoriesProductRouteWithChildren
  '/categories/product/_product': typeof CategoriesProductProductRouteWithChildren
  '/auth/_auth/signup': typeof AuthAuthSignupLazyRoute
  '/categories/_categories/$id': typeof CategoriesCategoriesIdLazyRoute
  '/account/_account/': typeof AccountAccountIndexRoute
  '/categories/_categories/': typeof CategoriesCategoriesIndexRoute
  '/categories/_categories/search/$id': typeof CategoriesCategoriesSearchIdRoute
  '/account/_account/trader/$id': typeof AccountAccountTraderIdLazyRoute
  '/categories/product/_product/$id': typeof CategoriesProductProductIdLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/account'
    | '/auth'
    | '/categories'
    | '/auth/change-password'
    | '/auth/forget-password'
    | '/auth/signin'
    | '/auth/verification'
    | '/auth/verification-confirmed'
    | '/categories/product'
    | '/auth/signup'
    | '/categories/$id'
    | '/account/'
    | '/categories/'
    | '/categories/search/$id'
    | '/account/trader/$id'
    | '/categories/product/$id'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/account'
    | '/auth'
    | '/categories'
    | '/auth/change-password'
    | '/auth/forget-password'
    | '/auth/signin'
    | '/auth/verification'
    | '/auth/verification-confirmed'
    | '/categories/product'
    | '/auth/signup'
    | '/categories/$id'
    | '/categories/search/$id'
    | '/account/trader/$id'
    | '/categories/product/$id'
  id:
    | '__root__'
    | '/'
    | '/account'
    | '/account/_account'
    | '/auth'
    | '/auth/_auth'
    | '/categories'
    | '/categories/_categories'
    | '/auth/_auth/change-password'
    | '/auth/_auth/forget-password'
    | '/auth/_auth/signin'
    | '/auth/_auth/verification'
    | '/auth/_auth/verification-confirmed'
    | '/categories/product'
    | '/categories/product/_product'
    | '/auth/_auth/signup'
    | '/categories/_categories/$id'
    | '/account/_account/'
    | '/categories/_categories/'
    | '/categories/_categories/search/$id'
    | '/account/_account/trader/$id'
    | '/categories/product/_product/$id'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AccountRoute: typeof AccountRouteWithChildren
  AuthRoute: typeof AuthRouteWithChildren
  CategoriesRoute: typeof CategoriesRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AccountRoute: AccountRouteWithChildren,
  AuthRoute: AuthRouteWithChildren,
  CategoriesRoute: CategoriesRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/account",
        "/auth",
        "/categories"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/account": {
      "filePath": "account",
      "children": [
        "/account/_account"
      ]
    },
    "/account/_account": {
      "filePath": "account/_account.tsx",
      "parent": "/account",
      "children": [
        "/account/_account/",
        "/account/_account/trader/$id"
      ]
    },
    "/auth": {
      "filePath": "auth",
      "children": [
        "/auth/_auth"
      ]
    },
    "/auth/_auth": {
      "filePath": "auth/_auth.tsx",
      "parent": "/auth",
      "children": [
        "/auth/_auth/change-password",
        "/auth/_auth/forget-password",
        "/auth/_auth/signin",
        "/auth/_auth/verification",
        "/auth/_auth/verification-confirmed",
        "/auth/_auth/signup"
      ]
    },
    "/categories": {
      "filePath": "categories",
      "children": [
        "/categories/_categories",
        "/categories/product"
      ]
    },
    "/categories/_categories": {
      "filePath": "categories/_categories.tsx",
      "parent": "/categories",
      "children": [
        "/categories/_categories/$id",
        "/categories/_categories/",
        "/categories/_categories/search/$id"
      ]
    },
    "/auth/_auth/change-password": {
      "filePath": "auth/_auth.change-password.tsx",
      "parent": "/auth/_auth"
    },
    "/auth/_auth/forget-password": {
      "filePath": "auth/_auth.forget-password.tsx",
      "parent": "/auth/_auth"
    },
    "/auth/_auth/signin": {
      "filePath": "auth/_auth.signin.tsx",
      "parent": "/auth/_auth"
    },
    "/auth/_auth/verification": {
      "filePath": "auth/_auth.verification.tsx",
      "parent": "/auth/_auth"
    },
    "/auth/_auth/verification-confirmed": {
      "filePath": "auth/_auth.verification-confirmed.tsx",
      "parent": "/auth/_auth"
    },
    "/categories/product": {
      "filePath": "categories/product",
      "parent": "/categories",
      "children": [
        "/categories/product/_product"
      ]
    },
    "/categories/product/_product": {
      "filePath": "categories/product/_product.tsx",
      "parent": "/categories/product",
      "children": [
        "/categories/product/_product/$id"
      ]
    },
    "/auth/_auth/signup": {
      "filePath": "auth/_auth.signup.lazy.tsx",
      "parent": "/auth/_auth"
    },
    "/categories/_categories/$id": {
      "filePath": "categories/_categories.$id.lazy.tsx",
      "parent": "/categories/_categories"
    },
    "/account/_account/": {
      "filePath": "account/_account.index.tsx",
      "parent": "/account/_account"
    },
    "/categories/_categories/": {
      "filePath": "categories/_categories.index.tsx",
      "parent": "/categories/_categories"
    },
    "/categories/_categories/search/$id": {
      "filePath": "categories/_categories.search.$id.tsx",
      "parent": "/categories/_categories"
    },
    "/account/_account/trader/$id": {
      "filePath": "account/_account.trader.$id.lazy.tsx",
      "parent": "/account/_account"
    },
    "/categories/product/_product/$id": {
      "filePath": "categories/product/_product.$id.lazy.tsx",
      "parent": "/categories/product/_product"
    }
  }
}
ROUTE_MANIFEST_END */
